generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN // Administrador do sistema
  OWNER // Responsável pela conta da empresa contratante
  MANAGER // Gerente ou supervisor
  EMPLOYEE // Colaborador padrão
}

model User {
  id        String   @id @unique @default(uuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(EMPLOYEE)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company   Company? @relation(fields: [companyId], references: [id])
  companyId String?

  department   Department? @relation(fields: [departmentId], references: [id])
  departmentId String?

  workSchedule   WorkSchedule? @relation(fields: [workScheduleId], references: [id])
  workScheduleId String?

  sessions    Session[]
  timeRecords TimeRecord[]

  @@map("users")
}

model Session {
  id        String   @id @default(uuid())
  token     String?  @unique
  expiredAt DateTime
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("sessions")
}

model Company {
  id        String   @id @default(uuid())
  name      String
  cnpj      String   @unique
  latitude  Float?
  longitude Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users       User[]
  departments Department[]

  @@map("companies")
}

model Department {
  id        String  @id @default(uuid())
  name      String
  company   Company @relation(fields: [companyId], references: [id])
  companyId String

  users User[]

  @@map("departments")
}

model WorkSchedule {
  id   String @id @default(uuid())
  name String

  days WorkScheduleDay[] // Dias da semana com horários definidos

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]

  @@map("work_schedules")
}

model WorkScheduleDay {
  id               String  @id @default(uuid())
  weekday          Weekday
  startTime        String // "08:00"
  endTime          String // "18:00"
  breakStartWindow String // "12:00"
  breakEndWindow   String // "13:30"
  breakDuration    Int // minutos => 90
  totalWorkMinutes Int // minutos => 510

  workSchedule   WorkSchedule @relation(fields: [workScheduleId], references: [id])
  workScheduleId String

  @@map("work_schedule_days")
}

enum Weekday {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum TimeRecordType {
  ENTRY // Entrada no trabalho
  EXIT // Saída do trabalho
  BREAK_START // Início do intervalo
  BREAK_END // Fim do intervalo
}

model TimeRecord {
  id        String         @id @default(uuid())
  type      TimeRecordType
  photoUrl  String // URL da foto ou base64
  latitude  Float
  longitude Float
  createdAt DateTime       @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("time_records")
}
